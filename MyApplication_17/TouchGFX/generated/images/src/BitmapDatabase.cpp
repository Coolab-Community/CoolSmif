// 4.13.0 dither_algorithm=2 alpha_dither=yes layout_rotation=0 opaque_image_format=RGB888 non_opaque_image_format=ARGB8888 section=ExtFlashSection extra_section=ExtFlashSection generate_png=no 0xed9c11d4
// Generated by imageconverter. Please, do not edit!

#include <BitmapDatabase.hpp>
#include <touchgfx/Bitmap.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <platform/driver/lcd/LCD24bpp.hpp>

extern const unsigned char _background[]; // BITMAP_BACKGROUND_ID = 0, Size: 430x201 pixels
extern const unsigned char _blue_buttons_round_icon_button[]; // BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_ID = 1, Size: 60x60 pixels
extern const unsigned char _blue_buttons_round_icon_button_pressed[]; // BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_PRESSED_ID = 2, Size: 60x60 pixels
extern const unsigned char _break[]; // BITMAP_BREAK_ID = 3, Size: 480x272 pixels
extern const unsigned char _campagnealu[]; // BITMAP_CAMPAGNEALU_ID = 4, Size: 480x272 pixels
extern const unsigned char _campagnecuivre[]; // BITMAP_CAMPAGNECUIVRE_ID = 5, Size: 480x272 pixels
extern const unsigned char _down[]; // BITMAP_DOWN_ID = 6, Size: 480x272 pixels
extern const unsigned char _logistique[]; // BITMAP_LOGISTIQUE_ID = 7, Size: 480x272 pixels
extern const unsigned char _lowcop[]; // BITMAP_LOWCOP_ID = 8, Size: 480x272 pixels
extern const unsigned char _mcmtq[]; // BITMAP_MCMTQ_ID = 9, Size: 480x272 pixels
extern const unsigned char _minibreak[]; // BITMAP_MINIBREAK_ID = 10, Size: 98x55 pixels
extern const unsigned char _minicampagnealu[]; // BITMAP_MINICAMPAGNEALU_ID = 11, Size: 98x55 pixels
extern const unsigned char _minicampagnecuivre[]; // BITMAP_MINICAMPAGNECUIVRE_ID = 12, Size: 98x55 pixels
extern const unsigned char _minidown[]; // BITMAP_MINIDOWN_ID = 13, Size: 98x55 pixels
extern const unsigned char _minilogistique[]; // BITMAP_MINILOGISTIQUE_ID = 14, Size: 98x55 pixels
extern const unsigned char _minilowcop[]; // BITMAP_MINILOWCOP_ID = 15, Size: 98x55 pixels
extern const unsigned char _minimcmtq[]; // BITMAP_MINIMCMTQ_ID = 16, Size: 98x55 pixels
extern const unsigned char _mininepasrecharger[]; // BITMAP_MININEPASRECHARGER_ID = 17, Size: 98x55 pixels
extern const unsigned char _minitq[]; // BITMAP_MINITQ_ID = 18, Size: 98x55 pixels
extern const unsigned char _miniup[]; // BITMAP_MINIUP_ID = 19, Size: 98x55 pixels
extern const unsigned char _nepasrecharger[]; // BITMAP_NEPASRECHARGER_ID = 20, Size: 480x272 pixels
extern const unsigned char _oa[]; // BITMAP_OA_ID = 21, Size: 480x272 pixels
extern const unsigned char _tq[]; // BITMAP_TQ_ID = 22, Size: 480x272 pixels
extern const unsigned char _up[]; // BITMAP_UP_ID = 23, Size: 480x269 pixels

const touchgfx::Bitmap::BitmapData bitmap_database[] =
{
    { _background, 0, 430, 201, 0, 0, 430, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 201, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { _blue_buttons_round_icon_button, 0, 60, 60, 13, 11, 34, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 36, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _blue_buttons_round_icon_button_pressed, 0, 60, 60, 13, 11, 34, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 36, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _break, 0, 480, 272, 0, 0, 480, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 272, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { _campagnealu, 0, 480, 272, 0, 0, 480, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 272, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { _campagnecuivre, 0, 480, 272, 0, 0, 480, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 272, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { _down, 0, 480, 272, 0, 0, 480, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 272, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { _logistique, 0, 480, 272, 0, 0, 480, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 272, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { _lowcop, 0, 480, 272, 0, 0, 480, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 272, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { _mcmtq, 0, 480, 272, 0, 0, 480, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 272, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { _minibreak, 0, 98, 55, 0, 0, 98, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 55, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { _minicampagnealu, 0, 98, 55, 0, 0, 98, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 55, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { _minicampagnecuivre, 0, 98, 55, 0, 0, 98, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 55, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { _minidown, 0, 98, 55, 0, 0, 98, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 55, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { _minilogistique, 0, 98, 55, 0, 0, 98, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 55, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { _minilowcop, 0, 98, 55, 0, 0, 98, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 55, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { _minimcmtq, 0, 98, 55, 0, 0, 98, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 55, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { _mininepasrecharger, 0, 98, 55, 0, 0, 98, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 55, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { _minitq, 0, 98, 55, 0, 0, 98, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 55, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { _miniup, 0, 98, 55, 0, 0, 98, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 55, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { _nepasrecharger, 0, 480, 272, 0, 0, 480, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 272, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { _oa, 0, 480, 272, 0, 0, 480, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 272, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { _tq, 0, 480, 272, 0, 0, 480, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 272, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { _up, 0, 480, 269, 0, 0, 480, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 269, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 }
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
}
